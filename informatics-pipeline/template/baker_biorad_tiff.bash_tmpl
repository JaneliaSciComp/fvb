#!/bin/bash

# Required resources
IMAGEJ="/usr/local/java/jre/bin/java -mx8000m -XX:+AggressiveHeap -jar /usr/local/ImageJ/ij.jar -ijpath /usr/local/ImageJ -batch "

# Parameters
if [ ! $1 ]
then
  echo "Error: no ImageJ macro specified"
  exit -1
fi
IMAGEJ_MACRO=$1

# Make sure the .pic file exists
if [ -e "$grammar{path}" ]
then
  chmod 555 "$grammar{path}"
else
  echo -e "Error: image $grammar{path} does not exist"
  exit -1
fi

# Make sure the ImageJ macro exists
if [ ! -e $IMAGEJ_MACRO ]
then
  echo -e "Error: ImageJ macro $IMAGEJ_MACRO does not exist"
  exit -1
fi

# Add /usr/local/lib to library path for mplayer library
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib

# Create work product directories as needed
echo "Creating work product directories"
for THISDIR in $grammar{tiff_dir}
do
  if [ ! -e "$THISDIR" ]
  then
    mkdir -p -m 755 "$THISDIR"
    if [ ! -e "$THISDIR" ]
    then
      echo -e "Could not create $THISDIR"
      exit -1
    fi
  fi
done

# Set up X frame  buffer
#/usr/bin/Xvfb :99 -screen 0 1x1x24 -sp /usr/lib64/xserver/SecurityPolicy -fp /usr/share/X11/fonts/misc &
#MYPID=$!
#export DISPLAY="localhost:99.0"

# Run the ImageJ macro
xvfb-run $IMAGEJ $IMAGEJ_MACRO
if [ $? -ne 0 ]
then
  echo -e "Error: ImageJ macro $IMAGEJ_MACRO failed"
  exit -1
fi

# We're done with the frame buffer
#kill -9 $MYPID

# We're done! Delete the ImageJ macro and this shell script.
rm -f $IMAGEJ_MACRO
trap "rm -f $0" 0
echo "Job complete for $grammar{file}"
