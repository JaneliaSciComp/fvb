# ****************************************************************************
# Resource name:  analysis.gra      
# Written by:     Lowell Umayam
# Revision level: 1.0
# Date released:  2009-04-07
# Description:    
#                 
# ****************************************************************************

# ****************************************************************************
# * Rules (non-terminal productions)                                         *
# ****************************************************************************

start: pathname
{
  use File::Basename;
  use Cwd 'abs_path';

  my %data = &assign(\%item);
  
  # Load the module from a path relative to this grammar file.
  $data{pipeline_scripts_path} = abs_path(dirname(dirname($main::Grammar_path)));
  require $data{pipeline_scripts_path} . "/BoxPipeline.pm";
  
  $data{pipeline_stage} = '04_loaded';
  
  BoxPipeline::add_settings_to_hash(\%data, $data{topdir}, "", "box_analysis");
  
  # Base directories
  
  $data{base_dir} = $data{pipeline_root} . '/' . $data{pipeline_stage};
  $data{load_dir} = $data{base_dir} . '/' . $data{topdir};
  $data{output_dir} = $data{load_dir} . '/' . $data{output_dir_name};
  
  $data{analysis_dir} = $data{pipeline_root} . '/05_analyzed';
  $data{top_analysis_dir} = $data{analysis_dir} . '/' . $data{topdir};
  
  $data{output_analysis_dir} = $data{top_analysis_dir} . '/' . $data{output_dir_name};
  
  $data{analysis_loader_dir} = $data{pipeline_scripts_path} . '/AnalysisLoader';
  
  #get success_mat file
  opendir(OUTPUT,$data{output_dir});
  $data{success_mat_file} = 'null';
  while (my $file = readdir(OUTPUT)) {
        if ($file =~ /^success/) {
             $data{success_mat_file} = $data{output_dir} . "/" . $file;
        }
  }  
  closedir(OUTPUT);
  
  $data{comparison_dir} = $data{pipeline_root} . '/../comparison_summary';
  $data{comparison_pdf_link} = 'comparison_summary_' . $data{topdir} . '.pdf';
  $data{box_data_comparison} = $data{output_analysis_dir} . '/comparison_summary.pdf';
  
  $return = { $item[0] => $data{pathname}, %data };
}

pathname: sourcedir '/' filename
{
  my %data = &assign(\%item);
  $return = { $item[0] => join('/',$data{sourcedir},$data{filename}), %data };
}

# ****************************************************************************
# * Rules (terminal productions)                                             *
# ****************************************************************************

filename: clipname
{
  $return = { $item[0] => join('',@item[1..$#item]), &assign(\%item) };
}

sourcedir: topdir
{
  $return = { $item[0] => join('',@item[1..$#item]), &assign(\%item) };
}

# ****************************************************************************
# * Terminals GMR_21C09_AE_01_shi_Athena_20100225T123944/Output
# ****************************************************************************
topdir: /[^\/]+/ | <error: illegal top level directory>
clipname: /[^\.]+/ | <error: illegal clipname>
